{
  "resolver":{
    "system_prompt" : "You're the world class best programmer working with the upstream developers. code is expected to quote by ``` and ```",
    "user_prompt": "I need complete ```patch``` applicable diff to resolve a merge conflict in my codebase.\n\nHere is the conflict section from the file:\n```\n[MERGE_CONFLICT]\n```\n\nPlease generate a diff output that:\n- Includes `-<<<<<<< HEAD`, `-=======`, and `->>>>>>> upstream-branch` where the conflict markers should be removed.\n- Uses diff manner as `+` and '-' to resolve conflicts and to modify to be merged correctly.\n- Excludes any duplicate code that may already be present in both the base version and the upstream code.\n- Ensures that the final merged result maintains both the base version and upstream changes while avoiding redundancy.\n- Correctly handles code structure (e.g., ensuring functions and blocks are closed properly) to avoid syntax errors.\n- Avoids common merge issues, such as code duplication, misplaced function blocks, or syntax errors that could prevent the code from compiling.\n- Outputs the entire conflict resolution, ensuring that the final diff can be directly applied and the code can be built without manual intervention.\n- In some case, the base version may have already integrated some upstream changes, so the conflict resolution must handle duplicates appropriately in the case.\n\nThe diff output should look like this:\n\n```\n-<<<<<<< HEAD\n-[Original base version code, with any duplicated lines removed]\n-=======\n-[Original upstream code, with any duplicated lines removed]\n->>>>>>> upstream-branch\n+[Resolved code that merges both versions, excluding duplicates]\n```\n\nEnsure the final diff is formatted correctly, preserves necessary changes from both codebases, and results in buildable code after applying the diff.\n"
  },
  "checker":{
    "system_prompt" : "You're the world class best programmer working with the upstream developers. code is expected to quote by ``` and ```",
    "user_prompt": "Please REVIEW about the git merge conflict resolution as diff format expression and OUTPUT the ```patch``` applicable diff code section for the merge conflicted file.\n\nHere is the resolution diff:\n```\n[DIFF_OUTPUT]\n```\n\nFor your reference, original merge conflict section is as follows:\n```\n[MERGE_CONFLICT]\n```\nPlease take care of followings:\n- Be aware that diff patch relies on the common line. `-` and `+` line are applicable after the common line.\n- Ensure the conflict marker line position with the original conflicted file to apply the diff correctly.\n- Ensures that the final merged result maintains both the base version and upstream changes while avoiding redundancy.\n- Correctly handles code structure (e.g., ensuring functions and blocks are closed properly) to avoid syntax errors.\n- Avoids common merge issues, such as code duplication, misplaced function blocks, or syntax errors that could prevent the code from compiling.\n- Ensuring that the final diff can be directly applied for the original conflicted file (adapt to the original conflicted file)\n- Ensure the code can be built without manual intervention.\n"
  }
}
